version: '3.5'

services:
  # api:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #   depends_on:
  #     - tg_postgres
  #   environment:
  #     DATABASE_URL: postgres://tg:tg@postgres:5432/db
  #     NODE_ENV: development
  #     PORT: 3000
  #   ports:
  #     - '3001:3000'

  tg_postgres:
    container_name: tg_postgres
    image: postgres:14.0-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: db
    volumes:
      - ${DB_NAME}:/var/www/tg_postgres/docker-volumes/${DB_NAME}
    ports:
      - ${DB_HOST}:${DB_PORT}:${DB_PORT}
    networks:
      - tg_postgres
    restart: unless-stopped

  tg_postgres_pgadmin:
    container_name: tg_postgres_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: tg@admin.com
      PGADMIN_DEFAULT_PASSWORD: tg
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/www/tg_postgres/docker-volumes/pgadmin
    ports:
      - 127.0.0.1:5050:80
    networks:
      - tg_postgres
    restart: unless-stopped

networks:
  tg_postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
