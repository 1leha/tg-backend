# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CategoryEntity {
  dataCreated: DateTime!
  id: ID!
  name: String!
  task: [TaskEntity!]
  tasks: TaskEntity!
  user: UserEntity!
  userId: Int!
}

input CreateCategoryInput {
  name: String!
  userId: Int!
}

input CreateTaskInput {
  categoryId: Int!
  dataEnd: DateTime!
  dataStart: DateTime!
  description: String!
  name: String!
}

input CreateUserInput {
  email: String!
  password: String!
  role: String
  token: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!): CategoryEntity!
  createTask(createTaskInput: CreateTaskInput!): TaskEntity!
  deleteCategory(id: Float!): Float!
  deleteTask(id: Float!): Float!
  deleteUserById(id: Float!): Float!
  loginUser(loginUser: LoginUserInput!): UserEntity!
  logoutUser: String!
  registerUser(registerUser: CreateUserInput!): UserEntity!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): CategoryEntity!
  updateCurrentUser(updateCurrentUser: UpdateUserInput!): UserEntity!
  updateTask(updateTaskInput: UpdateTaskInput!): TaskEntity!
}

type Query {
  categories(id: Float!): [CategoryEntity!]!
  getAllCategories: [CategoryEntity!]!
  getAllTasks: [TaskEntity!]!
  getAllUsers: [UserEntity!]!
  getCurrentUser: UserEntity!
  getUserById(id: Float!): UserEntity!
  tasks(categoryId: Float!): [TaskEntity!]!
}

type TaskEntity {
  category: CategoryEntity!
  categoryId: Int!
  dataEnd: DateTime
  dataStart: DateTime
  description: String!
  id: ID!
  length: Int!
  name: String!
}

input UpdateCategoryInput {
  id: Int!
  name: String!
}

input UpdateTaskInput {
  dataEnd: DateTime
  dataStart: DateTime
  description: String
  id: Int!
  name: String
}

input UpdateUserInput {
  email: String
  password: String
  role: String
}

type UserEntity {
  category: [CategoryEntity!]
  email: String!
  id: ID!
  password: String!
  role: String!
  token: String
}